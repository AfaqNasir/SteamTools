<Styles
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="using:System"
    xmlns:ui="using:FluentAvalonia.UI.Controls">
    <Design.PreviewWith>
        <Border Padding="20">
            <StackPanel Classes="Settings">
                <Border Classes="Item">
                    <DockPanel>
                        <StackPanel>
                            <TextBlock Text="程序启动时自动运行ASF" />
                            <TextBlock Classes="prompt" Text="程序启动时自动运行ASF" />
                        </StackPanel>
                        <ToggleSwitch />
                    </DockPanel>
                </Border>

                <Separator Classes="Separator" />

                <Border Classes="Item">
                    <DockPanel>
                        <TextBlock Text="程序启动时自动运行ASF" />
                        <ToggleSwitch />
                    </DockPanel>
                </Border>

                <Border Classes="Item">
                    <DockPanel>
                        <TextBlock Text="启用IPC" />
                        <ToggleSwitch />
                    </DockPanel>
                </Border>

                <Border Classes="Item">
                    <DockPanel>
                        <TextBlock Text="IPC服务访问密码" />
                        <TextBox Classes="revealPasswordButton" PasswordChar="{StaticResource PasswordChar}" />
                    </DockPanel>
                </Border>

                <Separator Classes="Separator" />
                <Border Classes="Item">
                    <DockPanel>
                        <TextBlock Text="存储空间" />
                        <Button Content="查看目录" />
                    </DockPanel>
                </Border>
            </StackPanel>
        </Border>
    </Design.PreviewWith>
    <Styles.Resources>
        <sys:Double x:Key="SettingsRightContentWidth">260</sys:Double>

        <SolidColorBrush x:Key="ExpanderBorderPointerOverBrush" Color="{DynamicResource CardStrokeColorDefault}" />
        <SolidColorBrush x:Key="ExpanderBorderBrush" Color="{DynamicResource CardStrokeColorDefault}" />
    </Styles.Resources>

    <Style Selector="StackPanel.Settings">
        <Setter Property="Spacing" Value="5" />
        <Setter Property="Margin" Value="10 0" />
    </Style>

    <Style Selector="StackPanel.Settings Separator.Separator">
        <Setter Property="Height" Value="0.88" />
        <Setter Property="Background" Value="{DynamicResource SystemControlHighlightBaseLowBrush}" />
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="Margin" Value="0 10" />
    </Style>

    <Style Selector="Border.Item:pointerover">
        <Setter Property="Background" Value="{DynamicResource ControlStrokeColorSecondaryBrush}" />
    </Style>

    <Style Selector="Border.Item">
        <Setter Property="MinHeight" Value="65" />
        <Setter Property="Padding" Value="15" />
        <Setter Property="Background" Value="{DynamicResource CardBackgroundFillColorDefaultBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CardStrokeColorDefaultBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
    </Style>

    <Style Selector="Border.Item:pointerover">
        <Setter Property="Background" Value="{DynamicResource CardBackgroundFillColorSecondaryBrush}" />
    </Style>

    <Style Selector="StackPanel.Settings &gt; Button.plain">
        <Setter Property="Cursor" Value="Arrow" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    </Style>

    <Style Selector="StackPanel.Settings Button.primary">
        <Setter Property="Height" Value="38" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
    </Style>

    <Style Selector="StackPanel.Settings Expander">
        <Setter Property="IsExpanded" Value="True" />
    </Style>

    <Style Selector="StackPanel.Settings Expander ToggleButton.ExpanderToggleButton /template/ ContentPresenter#ContentPresenter">
        <Setter Property="Height" Value="65" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style Selector="StackPanel.Settings Expander ToggleButton.ExpanderToggleButton /template/ ContentPresenter#ContentPresenter &gt; TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <!--<Style Selector="StackPanel.Settings TextBlock">
        <Setter Property="FontSize" Value="{StaticResource FontSizeH7}" />
    -->
    <!--<Setter Property="Foreground" Value="{DynamicResource HighlightForegroundBrushKey}" />-->
    <!--
    </Style>-->

    <Style Selector="StackPanel.Settings TextBlock.title">
        <Setter Property="FontSize" Value="{StaticResource FontSizeH7}" />
        <Setter Property="Foreground" Value="{DynamicResource HighlightForegroundBrushKey}" />
        <Setter Property="(TextBlock.FontWeight)" Value="Bold" />
    </Style>

    <Style Selector="StackPanel.Settings TextBlock.prompt">
        <Setter Property="FontSize" Value="{StaticResource FontSizeH8}" />
        <Setter Property="Foreground" Value="{DynamicResource SemiActiveForegroundColorKey}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <!--<Setter Property="Margin" Value="10 0" />-->
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style Selector="StackPanel.Settings DockPanel &gt; Label">
        <Setter Property="Margin" Value="0 0 20 0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="(DockPanel.Dock)" Value="Left" />
    </Style>

    <Style Selector="StackPanel.Settings DockPanel &gt; TextBlock">
        <Setter Property="Margin" Value="0 0 20 0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="(DockPanel.Dock)" Value="Left" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style Selector="StackPanel.Settings DockPanel &gt; Button:not(.plain)">
        <Setter Property="Padding" Value="30 5" />
        <Setter Property="Height" Value="30" />
        <Setter Property="IsDefault" Value="True" />
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}" />
        <Setter Property="BorderThickness" Value="{DynamicResource ButtonBorderThemeThickness}" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="(DockPanel.Dock)" Value="Right" />
    </Style>

    <Style Selector="StackPanel.Settings DockPanel &gt; ToggleSwitch">
        <!--<Setter Property="Margin" Value="0 0 -12 0" />-->
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="OnContent" Value="{x:Null}" />
        <Setter Property="OffContent" Value="{x:Null}" />
        <Setter Property="Width" Value="40" />
        <Setter Property="(DockPanel.Dock)" Value="Right" />
    </Style>

    <Style Selector="StackPanel.Settings DockPanel &gt; TextBox">
        <Setter Property="MinWidth" Value="{StaticResource SettingsRightContentWidth}" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="(DockPanel.Dock)" Value="Right" />
    </Style>

    <Style Selector="StackPanel.Settings DockPanel &gt; ComboBox">
        <Setter Property="MinWidth" Value="{StaticResource SettingsRightContentWidth}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="(DockPanel.Dock)" Value="Right" />
    </Style>

    <Style Selector="StackPanel.Settings DockPanel &gt; NumericUpDown">
        <Setter Property="MinWidth" Value="{StaticResource SettingsRightContentWidth}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="(DockPanel.Dock)" Value="Right" />
    </Style>

    <Style Selector="StackPanel.Settings DockPanel &gt; Slider">
        <Setter Property="MinWidth" Value="{StaticResource SettingsRightContentWidth}" />
        <!--<Setter Property="Margin" Value="0 -15 0 0" />-->
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="(DockPanel.Dock)" Value="Right" />
    </Style>

    <Style Selector="StackPanel.Settings DockPanel &gt; StackPanel">
        <Setter Property="Margin" Value="0 0 150 0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="(DockPanel.Dock)" Value="Left" />
    </Style>

    <Style Selector="StackPanel.Settings DockPanel :is(Control).right">
        <Setter Property="Margin" Value="0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="(DockPanel.Dock)" Value="Right" />
    </Style>

    <Style Selector="StackPanel.Settings DockPanel :is(Control).left">
        <Setter Property="Margin" Value="0 0 150 0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="(DockPanel.Dock)" Value="Left" />
    </Style>

</Styles>
