<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="180" d:DesignHeight="450"
        Width="180"
        x:Class="System.Application.UI.Views.Windows.TaskBarWindow"
        xmlns:resx="using:System.Application.UI.Resx"
        xmlns:service="using:System.Application.Services"
        xmlns:vm="using:System.Application.UI.ViewModels"
        xmlns:ms="using:System.Application.Settings"
        xmlns:ui="using:FluentAvalonia.UI.Controls"
        xmlns:controls="clr-namespace:System.Application.UI.Views.Controls"
        x:DataType="vm:TaskBarWindowViewModel"
        x:CompileBindings="True"
        x:Name="taskbarWindow"
        WindowStartupLocation="Manual"
        Background="{x:Null}"
        Topmost="True"
        CanResize="False"
        ShowInTaskbar="False"
        ShowActivated="True"
        Title="{Binding Title}">
  <!--Background-->
  <Panel>
    <ExperimentalAcrylicBorder>
      <ExperimentalAcrylicBorder.Material>
        <ExperimentalAcrylicMaterial TintColor="{DynamicResource ThemeColorKey}"
                                     TintOpacity="1"
                                     MaterialOpacity="{ReflectionBinding Value,Source={x:Static ms:UISettings.AcrylicOpacity},Mode=OneWay}"/>
      </ExperimentalAcrylicBorder.Material>
    </ExperimentalAcrylicBorder>
    <StackPanel Spacing="8" Background="Transparent">
      <StackPanel.Styles>
        <Style Selector="Button">
          <Setter Property="Background" Value="Transparent"></Setter>
          <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
          <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
          <Setter Property="FontSize" Value="12"></Setter>
          <Setter Property="Padding" Value="12,8,12,8"></Setter>
        </Style>
        <Style Selector="Button /template/ ContentPresenter">
          <Setter Property="CornerRadius" Value="0" />
        </Style>
        <Style Selector="Separator">
          <Setter Property="Margin" Value="8 0"></Setter>
        </Style>

        <Style Selector="Button.MenuButton">
          <Setter Property="Command" Value="{Binding MenuClickCommand}"></Setter>
          <Setter Property="CommandParameter" Value="{ReflectionBinding $self.Tag}"></Setter>
        </Style>
      </StackPanel.Styles>

      <DockPanel Margin="0 8 0 0">
        <Image Source="/Application/UI/Assets/Icon.ico" Height="48" Width="48" VerticalAlignment="Center" Margin="10" DockPanel.Dock="Left"/>
        <!--<Image Source="{ReflectionBinding Path=AvatarPath, Source={x:Static service:UserService.Current},Mode=OneWay,Converter={StaticResource BitmapAssetValueConverter},ConverterParameter=100}"
                         Stretch="Uniform"
                         Height="100" Width="100"
                         HorizontalAlignment="Center">
          </Image>-->
        <StackPanel DockPanel.Dock="Right" Spacing="8" VerticalAlignment="Center">
          <controls:ScrollingTextBlock Text="{x:Static vm:TaskBarWindowViewModel.TitleString}"
                                Foreground="{DynamicResource HighlightForegroundBrushKey}"
                                FontSize="14"/>
          <TextBlock Text="{Binding Path=Version, StringFormat=v{0}, Mode=OneWay}"
                   Foreground="{DynamicResource HighlightForegroundBrushKey}" FontSize="12"/>
        </StackPanel>
      </DockPanel>
      <Separator Classes="Separator"/>
      <StackPanel>
        <ItemsControl Items="{Binding Tabs}">
          <ItemsControl.ItemTemplate>
            <DataTemplate>
              <Button x:Name="menuItem"
                      Tag="{Binding}"
                      HorizontalContentAlignment="Stretch"
                      HorizontalAlignment="Stretch"
                      CommandParameter="{Binding Id}"
                      PointerEntered="MenuButton_PointerEntered"
                      PointerExited="MenuButton_PointerExited"
                      Command="{ReflectionBinding #taskbarWindow.DataContext.MenuClickCommand}">
                <Button.Content>
                  <DockPanel>
                    <ui:SymbolIcon Symbol="ChevronRight"
                                   IsVisible="{Binding IsTaskBarSubMenu}"
                                   DockPanel.Dock="Right"
                                   VerticalAlignment="Center"/>
                    <controls:ScrollingTextBlock Text="{Binding Name}"
                                                 VerticalAlignment="Center"
                                                 DockPanel.Dock="Left"
                                                 HorizontalAlignment="Stretch"/>
                  </DockPanel>
                </Button.Content>
                <Button.DataTemplates>
                  <DataTemplate DataType="{x:Type vm:MenuItemSeparator}">
                    <ui:MenuFlyoutSeparator/>
                  </DataTemplate>
                  <DataTemplate DataType="{x:Type vm:MenuItemViewModel}">
                    <ui:MenuFlyoutItem Text="{Binding Header}"
                                       IsVisible="{Binding IsVisible}"
                                       IsEnabled="{Binding IsEnabled}"
                                       ToolTip.Tip="{Binding ToolTip,Mode=OneWay}"
                                       Command="{Binding Command,Mode=OneWay}"
                                       CommandParameter="{Binding CommandParameter,Mode=OneWay}"/>
                  </DataTemplate>
                </Button.DataTemplates>
                <FlyoutBase.AttachedFlyout>
                  <ui:MenuFlyout Placement="RightEdgeAlignedTop"
                              Items="{Binding MenuItems}"
                              ShowMode="TransientWithDismissOnPointerMoveAway">
                  </ui:MenuFlyout>
                </FlyoutBase.AttachedFlyout>
              </Button>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>
        <!--<Button Content="{ReflectionBinding Path=Res.CommunityFix,Mode=OneWay,Source={x:Static resx:R.Current}}"
                Classes="MenuButton"></Button>
        <Button Content="{ReflectionBinding Path=Res.ScriptConfig,Mode=OneWay,Source={x:Static resx:R.Current}}"
                Classes="MenuButton"></Button>
        <Button Content="{ReflectionBinding Path=Res.UserFastChange,Mode=OneWay,Source={x:Static resx:R.Current}}"
                Classes="MenuButton"
                x:Name="UserChangeMenu">
        </Button>
        <Button Content="{ReflectionBinding Path=Res.GameList,Mode=OneWay,Source={x:Static resx:R.Current}}"
                Classes="MenuButton"></Button>
        <Button Content="{ReflectionBinding Path=Res.LocalAuth,Mode=OneWay,Source={x:Static resx:R.Current}}"
                Classes="MenuButton"
                x:Name="LocalAuthMenu">
          <FlyoutBase.AttachedFlyout>
            <MenuFlyout Placement="LeftEdgeAlignedTop"
                        ShowMode="TransientWithDismissOnPointerMoveAway">
              <MenuItem Header="Item 3" />
              <MenuItem Header="Item 6" />
            </MenuFlyout>
          </FlyoutBase.AttachedFlyout>
        </Button>-->
      </StackPanel>
      <Separator Classes="Separator"/>
      <StackPanel>
        <Button Content="{ReflectionBinding Path=Res.Settings,Mode=OneWay,Source={x:Static resx:R.Current}}"
                Classes="MenuButton"
                Tag="{x:Static vm:TaskBarWindowViewModel.SettingsId}"/>
        <Button Content="{ReflectionBinding Path=Res.Exit,Mode=OneWay,Source={x:Static resx:R.Current}}"
                Classes="MenuButton"
                Tag="{x:Static vm:TaskBarWindowViewModel.CommandExit}"></Button>
      </StackPanel>
    </StackPanel>
  </Panel>
</Window>
