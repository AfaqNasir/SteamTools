<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="500" d:DesignHeight="600"
        MinWidth="500" MinHeight="600"
        x:Class="System.Application.UI.Views.Windows.EditAppInfoWindow"
        xmlns:resx="using:System.Application.UI.Resx"
        xmlns:vm="using:System.Application.UI.ViewModels"
        xmlns:models="using:System.Application.Models"
        xmlns:controls="clr-namespace:System.Application.UI.Views.Controls"
        xmlns:ms="using:System.Application.Settings"
        xmlns:ui="using:FluentAvalonia.UI.Controls"
        xmlns:col="using:System.Collections"
        xmlns:sys="using:System"
        xmlns:gif="using:AvaloniaGif"
        x:Name="u"
        x:DataType="vm:EditAppInfoWindowViewModel"
        x:CompileBindings="True">
  <Panel>
    <controls:TitleBar DockPanel.Dock="Top" />
    <Grid Margin="0 35 0 0"
          RowDefinitions="*,Auto">
      <TabControl Classes="flat"
                  DockPanel.Dock="Top">
        <TabItem Header="{ReflectionBinding Path=Res.Info,Mode=OneWay,Source={x:Static resx:R.Current}}">
          <ScrollViewer>
            <StackPanel Classes="Settings">

              <Border Classes="Item">
                <DockPanel>
                  <TextBlock Text="AppId"/>
                  <TextBlock Classes="right"
                             Text="{Binding App.AppId}"/>
                </DockPanel>
              </Border>

              <Border Classes="Item">
                <DockPanel>
                  <TextBlock Text="{ReflectionBinding Path=Res.Name,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
                  <TextBox Text="{Binding App.Name}"/>
                </DockPanel>
              </Border>

              <Border Classes="Item">
                <DockPanel>
                  <TextBlock Text="{ReflectionBinding Path=Res.SortAs,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
                  <TextBox Text="{Binding App.SortAs}"/>
                </DockPanel>
              </Border>

              <Border Classes="Item">
                <DockPanel>
                  <TextBlock Text="{ReflectionBinding Path=Res.Developer,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
                  <TextBox Text="{Binding App.Developer}"/>
                </DockPanel>
              </Border>

              <Border Classes="Item">
                <DockPanel>
                  <TextBlock Text="{ReflectionBinding Path=Res.Publisher,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
                  <TextBox Text="{Binding App.Publisher}"/>
                </DockPanel>
              </Border>

              <!--<Border Classes="Item">
                <DockPanel>
                  <TextBlock Text="发布日期"/>
                  <TextBox Text="{Binding App.SteamReleaseDate}"/>
                </DockPanel>
              </Border>-->

              <Border Classes="Item">
                <DockPanel>
                  <TextBlock Text="{ReflectionBinding Path=Res.SupportSystem,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
                  <TextBlock Classes="right"
                             Text="{Binding App.OSList}"/>
                </DockPanel>
              </Border>

              <Border Classes="Item" IsVisible="{Binding App.IsInstalled}">
                <DockPanel>
                  <TextBlock Text="{ReflectionBinding Path=Res.DiskUsage,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
                  <TextBlock Classes="right"
                             Text="{Binding App.SizeOnDisk,Converter={StaticResource StringFormatConverter},ConverterParameter=size}"/>
                </DockPanel>
              </Border>

              <Border Classes="Item" IsVisible="{Binding App.IsInstalled}">
                <DockPanel>
                  <TextBlock Text="{ReflectionBinding Path=Res.InstalledPath,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
                  <Button Classes="plain"
                          HorizontalAlignment="Right"
                          VerticalContentAlignment="Stretch"
                          ToolTip.Tip="{ReflectionBinding Path=Res.Settings_General_BrowseCustomFolder,Mode=OneWay,Source={x:Static resx:R.Current},Converter={StaticResource StringFormatConverter},ConverterParameter={x:Null}}"
                          Command="{ReflectionBinding OpenFolder}"
                          CommandParameter="{Binding App.InstalledDir}">
                    <TextBlock Text="{Binding App.InstalledDir}"
                               TextWrapping="Wrap"/>
                  </Button>
                </DockPanel>
              </Border>

              <Border Classes="Item" IsVisible="{Binding App.IsInstalled}">
                <DockPanel>
                  <TextBlock Text="{ReflectionBinding Path=Res.LastUpdatedDateTime,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
                  <TextBlock Classes="right"
                             Text="{Binding App.LastUpdated,StringFormat={}{0:yyyy-MM-dd HH:mm:ss}}"/>
                </DockPanel>
              </Border>

            </StackPanel>
          </ScrollViewer>
        </TabItem>

        <TabItem Header="{ReflectionBinding Path=Res.Media,Mode=OneWay,Source={x:Static resx:R.Current}}">
          <Panel>
            <ui:ContentDialog x:Name="SteamGridDBDialog"
                              MaxWidth="{ReflectionBinding #u.Width}"
                        Title="{ReflectionBinding Path=Res.SteamGridDBTitle,Mode=OneWay,Source={x:Static resx:R.Current}}"
                        IsVisible="False"
                        PrimaryButtonText="{ReflectionBinding Path=Res.Confirm,Mode=OneWay,Source={x:Static resx:R.Current}}"
                        CloseButtonText="{ReflectionBinding Path=Res.Cancel,Mode=OneWay,Source={x:Static resx:R.Current}}"
                        DefaultButton="Primary">
              <ui:ContentDialog.Content>
                <Panel>
                  <ProgressBar
                          Width="60"
                          Height="60"
                          Classes="Circle"
                          IsIndeterminate="True"
                          Orientation="Vertical"
                          IsVisible="{Binding IsLoadingSteamGrid}"/>
                  <TextBlock Text="{ReflectionBinding Path=Res.FailedGetImageFromSteamGridDB,Mode=OneWay,Source={x:Static resx:R.Current}}"
                             IsVisible="{Binding IsSteamGridEmpty}"/>
                  <ListBox Items="{Binding SteamGridItems}"
                           SelectedItem="{Binding SelectGrid}"
                           ScrollViewer.HorizontalScrollBarVisibility="Auto"
                           ScrollViewer.VerticalScrollBarVisibility="Disabled">
                    <ListBox.ItemsPanel>
                      <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" Spacing="8" />
                      </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                      <DataTemplate DataType="{x:Type models:SteamGridItem}">
                        <StackPanel Margin="0 0 0 15" Spacing="6">
                          <StackPanel.ContextFlyout>
                            <MenuFlyout>
                              <MenuItem Header="{ReflectionBinding Path=Res.OpenImageInBrowser,Mode=OneWay,Source={x:Static resx:R.Current}}"
                                        Command="{ReflectionBinding #u.DataContext.OpenSteamGridDBImageUrl}"
                                        CommandParameter="{Binding}"/>
                              <MenuItem Header="{ReflectionBinding Path=Res.OpenSteamGridDBInBrowser,Mode=OneWay,Source={x:Static resx:R.Current}}"
                                        Command="{ReflectionBinding #u.DataContext.OpenSteamGridDBAppUrl}"
                                        CommandParameter="{Binding}"/>
                              <MenuItem Header="{ReflectionBinding Path=Res.OpenTheAuthorPageInBrowser,Mode=OneWay,Source={x:Static resx:R.Current}}"
                                        Command="{ReflectionBinding #u.DataContext.OpenSteamGridDBAuthorUrl}"
                                        CommandParameter="{Binding}"/>
                            </MenuFlyout>
                          </StackPanel.ContextFlyout>
                          <Panel Width="150"
                                 MinHeight="150">
                            <gif:Image2 Width="150"
                                        DecodeWidth="150"
                                        Stretch="Uniform"
                                        Source="{Binding Thumb}" />
                          </Panel>
                          <!--<TextBlock MaxWidth="150" 
                                   TextWrapping="Wrap" 
                                   Text="{Binding Style}" 
                                   FontSize="12"
                                   FontWeight="Bold" />-->
                          <TextBlock MaxWidth="150"
                                     TextWrapping="Wrap"
                                     TextTrimming="CharacterEllipsis"
                                     ToolTip.Tip="{Binding Author.Name}"
                                     Text="{Binding Author.Name}"
                                     FontSize="10"
                                     Foreground="{DynamicResource InactiveForegroundBrushKey}" />
                        </StackPanel>
                      </DataTemplate>
                    </ListBox.ItemTemplate>
                  </ListBox>
                </Panel>
              </ui:ContentDialog.Content>
            </ui:ContentDialog>
            <ScrollViewer>
              <StackPanel Classes="Settings">
                <Border Classes="Item">
                  <DockPanel>
                    <StackPanel Margin="0">
                      <WrapPanel>
                        <TextBlock Text="{ReflectionBinding Path=Res.HorizontalTitlePage,Mode=OneWay,Source={x:Static resx:R.Current}}"
                                   VerticalAlignment="Center"/>
                        <Button Margin="5 0"
                                Cursor="Hand"
                                Tag="{x:Static models:SteamGridItemType.Header}"
                                Click="ShowGridDialog_Click"
                                ToolTip.Tip="{ReflectionBinding Path=Res.GetImageFromSteamGridDB,Mode=OneWay,Source={x:Static resx:R.Current}}">
                          <ui:SymbolIcon Symbol="CloudDownload" FontSize="18"/>
                        </Button>
                      </WrapPanel>
                      
                      <!--<TextBlock Text="{ReflectionBinding Path=Res.HorizontalTitlePage,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
                      <Button Classes="Hyperlink"
                              FontSize="12"
                              Content="{ReflectionBinding Path=Res.GetImageFromSteamGridDB,Mode=OneWay,Source={x:Static resx:R.Current}}"
                              Tag="{x:Static models:SteamGridItemType.Header}"
                              Click="ShowGridDialog_Click"/>-->

                      <TextBlock Classes="prompt h8"
                                 Text="{ReflectionBinding Path=Res.RecommendedResolution,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
                      <TextBlock Classes="prompt h8"
                                 Text="460 x 215 px"/>
                    </StackPanel>

                    <controls:CustomFilePicker Margin="50 0 0 0"
                                               MaxHeight="260"
                                               FileStream="{Binding App.EditHeaderLogoStream,Mode=TwoWay}"
                                               HorizontalAlignment="Right">
                      <gif:Image2 DecodeHeight="260"
                                  Stretch="Uniform"
                                  Source="{Binding App.EditHeaderLogoStream}"/>
                    </controls:CustomFilePicker>
                  </DockPanel>
                </Border>
                <Border Classes="Item">
                  <DockPanel>
                    <StackPanel Margin="0">
                      <WrapPanel>
                        <TextBlock Text="{ReflectionBinding Path=Res.VerticalTitlePage,Mode=OneWay,Source={x:Static resx:R.Current}}"
                                   VerticalAlignment="Center"/>
                        <Button Margin="5 0"
                                Cursor="Hand"
                                Tag="{x:Static models:SteamGridItemType.Grid}"
                                Click="ShowGridDialog_Click"
                                ToolTip.Tip="{ReflectionBinding Path=Res.GetImageFromSteamGridDB,Mode=OneWay,Source={x:Static resx:R.Current}}">
                          <ui:SymbolIcon Symbol="CloudDownload" FontSize="18"/>
                        </Button>
                      </WrapPanel>
                      <!--<TextBlock Text="{ReflectionBinding Path=Res.VerticalTitlePage,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
                      <Button Classes="Hyperlink"
                              FontSize="12"
                              Content="{ReflectionBinding Path=Res.GetImageFromSteamGridDB,Mode=OneWay,Source={x:Static resx:R.Current}}"
                              Tag="{x:Static models:SteamGridItemType.Grid}"
                              Click="ShowGridDialog_Click"/>-->

                      <TextBlock Classes="prompt h8"
                                 Text="{ReflectionBinding Path=Res.RecommendedResolution,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
                      <TextBlock Classes="prompt h8"
                                 Text="600 x 900 px"/>
                    </StackPanel>

                    <controls:CustomFilePicker Margin="50 0 0 0"
                                               MaxHeight="260"
                                               FileStream="{Binding App.EditLibraryGridStream,Mode=TwoWay}"
                                               HorizontalAlignment="Right">
                      <gif:Image2 DecodeHeight="260"
                                  Stretch="Uniform"
                                  Source="{Binding App.EditLibraryGridStream}"/>
                    </controls:CustomFilePicker>
                  </DockPanel>
                </Border>
                <Border Classes="Item">
                  <DockPanel>
                    <StackPanel Margin="0">
                      <WrapPanel>
                        <TextBlock Text="{ReflectionBinding Path=Res.Background,Mode=OneWay,Source={x:Static resx:R.Current}}"
                                   VerticalAlignment="Center"/>
                        <Button Margin="5 0"
                                Cursor="Hand"
                                Tag="{x:Static models:SteamGridItemType.Hero}"
                                Click="ShowGridDialog_Click"
                                ToolTip.Tip="{ReflectionBinding Path=Res.GetImageFromSteamGridDB,Mode=OneWay,Source={x:Static resx:R.Current}}">
                          <ui:SymbolIcon Symbol="CloudDownload" FontSize="18"/>
                        </Button>
                      </WrapPanel>
                      <!--<TextBlock Text="{ReflectionBinding Path=Res.Background,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
                      <Button Classes="Hyperlink"
                              FontSize="12"
                              Content="{ReflectionBinding Path=Res.GetImageFromSteamGridDB,Mode=OneWay,Source={x:Static resx:R.Current}}"
                              Tag="{x:Static models:SteamGridItemType.Hero}"
                              Click="ShowGridDialog_Click"/>-->

                      <TextBlock Classes="prompt h8"
                                 Text="{ReflectionBinding Path=Res.RecommendedResolution,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
                      <TextBlock Classes="prompt h8"
                                 Text="1920 x 620 px"/>
                    </StackPanel>

                    <controls:CustomFilePicker Margin="50 0 0 0"
                                               MaxHeight="260"
                                               FileStream="{Binding App.EditLibraryHeroStream,Mode=TwoWay}"
                                               HorizontalAlignment="Right">
                      <gif:Image2 DecodeHeight="260"
                                  Stretch="Uniform"
                                  Source="{Binding App.EditLibraryHeroStream}"/>
                    </controls:CustomFilePicker>
                  </DockPanel>
                </Border>
                <Border Classes="Item">
                  <DockPanel>
                    <StackPanel Margin="0">
                      <WrapPanel>
                        <TextBlock Text="{ReflectionBinding Path=Res.Icon,Mode=OneWay,Source={x:Static resx:R.Current}}"
                                   VerticalAlignment="Center"/>
                        <Button Margin="5 0"
                                Cursor="Hand"
                                Tag="{x:Static models:SteamGridItemType.Logo}"
                                Click="ShowGridDialog_Click"
                                ToolTip.Tip="{ReflectionBinding Path=Res.GetImageFromSteamGridDB,Mode=OneWay,Source={x:Static resx:R.Current}}">
                          <ui:SymbolIcon Symbol="CloudDownload" FontSize="18"/>
                        </Button>
                      </WrapPanel>
                      <!--<Button Classes="Hyperlink"
                              FontSize="12"
                              Content="{ReflectionBinding Path=Res.GetImageFromSteamGridDB,Mode=OneWay,Source={x:Static resx:R.Current}}"
                              Tag="{x:Static models:SteamGridItemType.Logo}"
                              Click="ShowGridDialog_Click"/>-->
                      <TextBlock Classes="prompt h8"
                                 Text="{ReflectionBinding Path=Res.RecommendedResolution,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
                      <TextBlock Classes="prompt h8"
                                 Text="120 x 120 px"/>
                    </StackPanel>

                    <controls:CustomFilePicker Margin="50 0 0 0"
                                               MaxWidth="220"
                                               FileStream="{Binding App.EditLibraryLogoStream,Mode=TwoWay}"
                                               HorizontalAlignment="Right">
                      <gif:Image2 DecodeWidth="220"
                                  Stretch="Uniform"
                                  Source="{Binding App.EditLibraryLogoStream}"/>
                    </controls:CustomFilePicker>
                  </DockPanel>
                </Border>

              </StackPanel>
            </ScrollViewer>
          </Panel>
        </TabItem>

        <TabItem Header="{ReflectionBinding Path=Res.LaunchItem,Mode=OneWay,Source={x:Static resx:R.Current}}" IsVisible="{Binding App.IsInstalled}">
          <ScrollViewer>
            <StackPanel Classes="Settings">
              <ItemsRepeater Items="{Binding App.LaunchItems}">
                <ItemsRepeater.Layout>
                  <StackLayout Orientation="Vertical" Spacing="10"/>
                </ItemsRepeater.Layout>
                <ItemsRepeater.ItemTemplate>
                  <DataTemplate DataType="{x:Type models:SteamAppLaunchItem}">
                    <Border Classes="Item">
                      <StackPanel Spacing="5">
                        <DockPanel>
                          <Label Content="{ReflectionBinding Path=Res.Name,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
                          <TextBox Text="{Binding Label}"/>
                        </DockPanel>
                        <DockPanel>
                          <Label Content="{ReflectionBinding Path=Res.ExecutableFile,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
                          <TextBox Text="{Binding Executable}"/>
                        </DockPanel>
                        <DockPanel>
                          <Label Content="{ReflectionBinding Path=Res.Arguments,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
                          <TextBox Text="{Binding Arguments}"/>
                        </DockPanel>
                        <DockPanel>
                          <Label Content="{ReflectionBinding Path=Res.WorkingDir,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
                          <TextBox Text="{Binding WorkingDir}"/>
                        </DockPanel>
                        <DockPanel>
                          <Label Content="{ReflectionBinding Path=Res.SupportSystem,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
                          <AutoCompleteBox
                                       Text="{Binding Platform,Mode=TwoWay}">
                            <AutoCompleteBox.Items>
                              <col:ArrayList>
                                <sys:String>windows</sys:String>
                                <sys:String>linux</sys:String>
                                <sys:String>macos</sys:String>
                              </col:ArrayList>
                            </AutoCompleteBox.Items>
                          </AutoCompleteBox>
                        </DockPanel>

                        <Grid ColumnDefinitions="*,*,*">
                          <Button HorizontalAlignment="Stretch"
                                     HorizontalContentAlignment="Center"
                                     Margin="5"
                                     Content="{ReflectionBinding Path=Res.MoveUp,Mode=OneWay,Source={x:Static resx:R.Current}}"
                                     Command="{ReflectionBinding #u.DataContext.UpLaunchItem}"
                                     CommandParameter="{Binding}"
                                     Cursor="Hand" />
                          <Button HorizontalAlignment="Stretch"
                                     HorizontalContentAlignment="Center"
                                     Grid.Column="1"
                                     Margin="5"
                                     Content="{ReflectionBinding Path=Res.MoveDown,Mode=OneWay,Source={x:Static resx:R.Current}}"
                                     Command="{ReflectionBinding #u.DataContext.DownLaunchItem}"
                                     CommandParameter="{Binding}"
                                     Cursor="Hand" />
                          <Button HorizontalAlignment="Stretch"
                                     HorizontalContentAlignment="Center"
                                     Grid.Column="2"
                                     Margin="5"
                                     Content="{ReflectionBinding Path=Res.Delete,Mode=OneWay,Source={x:Static resx:R.Current}}"
                                     Command="{ReflectionBinding #u.DataContext.DeleteLaunchItem}"
                                     CommandParameter="{Binding}"
                                     Cursor="Hand" />
                        </Grid>
                      </StackPanel>
                    </Border>
                  </DataTemplate>
                </ItemsRepeater.ItemTemplate>
              </ItemsRepeater>
              <Border Classes="Item">
                <Button HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                           Command="{ReflectionBinding AddLaunchItem}"
                           Cursor="Hand">
                  <ui:SymbolIcon Symbol="Add"
                                 Margin="0 20"
                                 FontSize="32"/>
                </Button>
              </Border>
            </StackPanel>
          </ScrollViewer>

        </TabItem>

        <TabItem Header="{ReflectionBinding Path=Res.SaveFile,Mode=OneWay,Source={x:Static resx:R.Current}}"
                 IsVisible="{Binding App.IsCloudArchive}">
          <ScrollViewer>
            <StackPanel Classes="Settings">
              <Border Classes="Item">
                <StackPanel Spacing="5">
                  <DockPanel>
                    <StackPanel Orientation="Horizontal" Spacing="10">
                      <Label Content="{ReflectionBinding Path=Res.CloudSaveFileSize,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
                      <Button Command="{ReflectionBinding ManageCloudArchive_Click}"
                              Cursor="Hand"
                              ToolTip.Tip="{ReflectionBinding Path=Res.GameList_CloudArchiveManager,Mode=OneWay,Source={x:Static resx:R.Current}}">
                        <ui:SymbolIcon Symbol="CloudBackup" FontSize="18"/>
                      </Button>
                    </StackPanel>
                    <TextBlock Classes="right"
                               Text="{ReflectionBinding App.CloudQuota,Converter={StaticResource StringFormatConverter},ConverterParameter=size}"/>
                  </DockPanel>
                  <DockPanel>
                    <Label Content="{ReflectionBinding Path=Res.CloudMaxnumFiles,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
                    <TextBlock Classes="right"
                               Text="{Binding App.CloudMaxnumFiles}"/>
                  </DockPanel>
                </StackPanel>
              </Border>

              <ItemsRepeater Items="{Binding App.SaveFiles}">
                <ItemsRepeater.Layout>
                  <StackLayout Orientation="Vertical" Spacing="10"/>
                </ItemsRepeater.Layout>
                <ItemsRepeater.ItemTemplate>
                  <DataTemplate DataType="{x:Type models:SteamAppSaveFile}">
                    <Border Classes="Item">
                      <StackPanel Spacing="5">
                        <DockPanel>
                          <Label Content="Root"/>
                          <TextBlock Classes="right" Text="{Binding Root}"/>
                        </DockPanel>
                        <DockPanel>
                          <Label Content="Path"/>
                          <TextBlock Classes="right" Text="{Binding Path}"/>
                        </DockPanel>
                        <DockPanel>
                          <Label Content="Pattern"/>
                          <TextBlock Classes="right" Text="{Binding Pattern}"/>
                        </DockPanel>
                        <DockPanel>
                          <Label Content="{ReflectionBinding Path=Res.DirPath,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
                          <Button Classes="plain"
                                  HorizontalContentAlignment="Stretch"
                                  HorizontalAlignment="Right"
                                  ToolTip.Tip="{ReflectionBinding Path=Res.Settings_General_BrowseCustomFolder,Mode=OneWay,Source={x:Static           resx:R.Current},Converter={StaticResource StringFormatConverter},ConverterParameter={x:Null}}"
                                  Command="{ReflectionBinding #u.DataContext.OpenFolder}"
                                  CommandParameter="{Binding FormatDirPath}">
                            <TextBlock Text="{Binding FormatDirPath}"
                                       HorizontalAlignment="Stretch"
                                       TextWrapping="Wrap"/>
                          </Button>
                        </DockPanel>
                      </StackPanel>
                    </Border>
                  </DataTemplate>
                </ItemsRepeater.ItemTemplate>
              </ItemsRepeater>
            </StackPanel>
          </ScrollViewer>

        </TabItem>

        <!--<TabItem Header="DLC">

          
        </TabItem>-->
      </TabControl>

      <StackPanel DockPanel.Dock="Bottom"
                  Margin="10"
                  Spacing="10"
                  Height="35"
                  Grid.Row="1"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Bottom"
                  Orientation="Horizontal">
        <StackPanel.Styles>
          <Style Selector="Button.DialogButton">
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="Padding" Value="45 0" />
            <Setter Property="Margin" Value="1" />
          </Style>
        </StackPanel.Styles>
        <Button Classes="DialogButton"
                Command="{ReflectionBinding ResetEditAppInfo}"
                IsDefault="False"
                IsVisible="{Binding App.OriginalData,Converter={StaticResource IsNullConverter},ConverterParameter=invert}"
                Content="{ReflectionBinding Path=Res.Reset,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
        <Button Classes="DialogButton"
                Command="{ReflectionBinding CancelEditAppInfo}"
                IsDefault="False"
                Content="{ReflectionBinding Path=Res.Cancel,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
        <Button Classes="action DialogButton"
                IsDefault="False"
                Command="{ReflectionBinding SaveEditAppInfo}"
                Content="{ReflectionBinding Path=Res.Save,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
      </StackPanel>
    </Grid>

    <controls:ToastMessage/>
  </Panel>
</Window>
