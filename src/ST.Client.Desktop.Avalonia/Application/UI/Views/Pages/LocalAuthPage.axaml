<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vm="using:System.Application.UI.ViewModels"
             xmlns:service="using:System.Application.Services"
             xmlns:resx="using:System.Application.UI.Resx"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:controls="using:System.Application.UI.Views.Controls"
             xmlns:models="using:System.Application.Models"
             xmlns:i="using:Avalonia.Xaml.Interactivity"
             xmlns:ia="using:Avalonia.Xaml.Interactions.Core"
             xmlns:ui="using:FluentAvalonia.UI.Controls"
             x:Name="u"
             x:DataType="vm:LocalAuthPageViewModel"
             x:CompileBindings="True"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="System.Application.UI.Views.Pages.LocalAuthPage">
  <DockPanel>
    <Border DockPanel.Dock="Top"
            Classes="paper"
            Background="{DynamicResource ThemeBrushKey}"
            Padding="10"
            Margin="{StaticResource ScrollMargin}">
      <DockPanel>
        <TextBox Watermark="{ReflectionBinding Path=Res.Search,Mode=OneWay,Source={x:Static resx:R.Current}}"
                 DockPanel.Dock="Right"
                 Classes="clearButton"
                 Text="{CompiledBinding SearchText,Mode=TwoWay}"
                 Background="Transparent"
                 VerticalAlignment="Center"
                 Width="250"
                 MinWidth="200">
          <TextBox.InnerLeftContent>
            <PathIcon Data="{StaticResource SearchDrawing}"
                      Classes="TextBoxIcon"/>
          </TextBox.InnerLeftContent>
        </TextBox>
        <ui:CommandBar DefaultLabelPosition="Right"
                       DockPanel.Dock="Left"
                       IsSticky="False">
          <ui:CommandBar.PrimaryCommands>
            <ui:CommandBarButton Icon="Add"
                                 Command="{Binding AddAuthCommand}"
                                 Label="{ReflectionBinding Path=Res.Add,Mode=OneWay,Source={x:Static resx:R.Current}}"/>

            <ui:CommandBarButton
                                 Command="{Binding EncryptionAuthCommand}"
                                 Label="{ReflectionBinding Path=Res.Encrypt,Mode=OneWay,Source={x:Static resx:R.Current}}">
              <ui:CommandBarButton.Icon>
                <ui:FAPathIcon Data="{StaticResource ShieldLockDrawing}"/>
              </ui:CommandBarButton.Icon>
            </ui:CommandBarButton>

            <ui:CommandBarButton
                                 Command="{Binding ExportAuthCommand}"
                                 Label="{ReflectionBinding Path=Res.Export,Mode=OneWay,Source={x:Static resx:R.Current}}">
              <ui:CommandBarButton.Icon>
                <ui:FAPathIcon Data="{StaticResource ExportDrawing}"/>
              </ui:CommandBarButton.Icon>
            </ui:CommandBarButton>

            <ui:CommandBarSeparator/>

            <ui:CommandBarButton
                       Command="{Binding LockCommand}"
                       Focusable="False"
                       Label="{ReflectionBinding Path=Res.Lock,Mode=OneWay,Source={x:Static resx:R.Current}}">
              <ui:CommandBarButton.Icon>
                <ui:FAPathIcon Data="{StaticResource LockDrawing}"/>
              </ui:CommandBarButton.Icon>
            </ui:CommandBarButton>

            <ui:CommandBarButton
                        Command="{Binding RefreshAuthCommand}"
                        Label="{ReflectionBinding Path=Res.Refresh,Mode=OneWay,Source={x:Static resx:R.Current}}">
              <ui:CommandBarButton.Icon>
                <ui:FAPathIcon Data="{StaticResource RefreshDrawing}"/>
              </ui:CommandBarButton.Icon>
            </ui:CommandBarButton>

          </ui:CommandBar.PrimaryCommands>
          <ui:CommandBar.SecondaryCommands>
            <ui:CommandBarButton Icon="Help"
                                 Command="{Binding OpenBrowserCommand}"
                                 CommandParameter="https://keylol.com/t710508-1-1"
                                 Label="{ReflectionBinding Path=Res.Helper,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
          </ui:CommandBar.SecondaryCommands>
          <ui:CommandBar.SecondaryCommands>
            <ui:CommandBarButton Icon="Help"
                                 Command="{Binding OpenBrowserCommand}"
                                 CommandParameter="https://store.steampowered.com/twofactor/manage"
                                 Label="{ReflectionBinding Path=Res.LocalAuth_RemoveAuth,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
          </ui:CommandBar.SecondaryCommands>
        </ui:CommandBar>
      </DockPanel>
    </Border>

    <Panel HorizontalAlignment="Stretch" DockPanel.Dock="Bottom">

      <TextBlock IsVisible="{CompiledBinding IsAuthenticatorsEmpty}"
        Text="{ReflectionBinding Path=Res.LocalAuth_NoAuthTip,Mode=OneWay,Source={x:Static resx:R.Current}}"
        TextWrapping="WrapWithOverflow"
        VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>

      <!--<StackPanel IsVisible="{CompiledBinding IsAuthenticatorsEmptyAndHasPassword}" VerticalAlignment="Center" HorizontalAlignment="Center" Spacing="10">
      <TextBlock
        Text="{ReflectionBinding Path=Res.LocalAuth_NoAuthTip,Mode=OneWay,Source={x:Static resx:R.Current}}"
        TextWrapping="WrapWithOverflow"></TextBlock>
    </StackPanel>-->

      <ScrollViewer  HorizontalScrollBarVisibility="Disabled"
                     VerticalScrollBarVisibility="Auto"
                     Padding="10 0 10 10">
        <ItemsRepeater Items="{Binding Authenticators,Mode=OneWay}">
          <ItemsRepeater.Layout>
            <UniformGridLayout ItemsJustification="Start"
                               MinRowSpacing="10"
                               MinColumnSpacing="10"/>
            <!--<WrapLayout HorizontalSpacing="10"
                      VerticalSpacing="10" Orientation="Horizontal"/>-->
          </ItemsRepeater.Layout>
          <ItemsRepeater.ItemTemplate>
            <DataTemplate>
              <Border x:Name="panel"
                      Classes="paper"
                      Width="250"
                      Height="250"
                      Background="{DynamicResource ThemeBrushKey}">
                <Border.ContextFlyout>
                  <MenuFlyout>
                    <MenuItem
                              Header="{ReflectionBinding Path=Res.LocalAuth_Copy,Mode=OneWay,Source={x:Static resx:R.Current}}"
                              Command="{ReflectionBinding #u.DataContext.CopyCodeCilp}"
                              CommandParameter="{Binding}">
                      <MenuItem.Icon>
                        <PathIcon Data="{StaticResource CopyDrawing}" Width="14"></PathIcon>
                      </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="-"></MenuItem>
                    <MenuItem
                              Header="{ReflectionBinding Path=Res.MoveUp,Mode=OneWay,Source={x:Static resx:R.Current}}"
                              Command="{ReflectionBinding #u.DataContext.UpMoveOrderById}"
                              CommandParameter="{Binding}">
                      <MenuItem.Icon>
                        <PathIcon Data="{StaticResource ChevronDownDrawing}" Width="14">
                          <PathIcon.RenderTransform>
                            <RotateTransform Angle="180"></RotateTransform>
                          </PathIcon.RenderTransform>
                        </PathIcon>
                      </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{ReflectionBinding Path=Res.MoveDown,Mode=OneWay,Source={x:Static resx:R.Current}}"
                              Command="{ReflectionBinding #u.DataContext.DownMoveOrderById}"
                              CommandParameter="{Binding}">
                      <MenuItem.Icon>
                        <PathIcon Data="{StaticResource ChevronDownDrawing}" Width="14">
                        </PathIcon>
                      </MenuItem.Icon>
                    </MenuItem>
                  </MenuFlyout>
                </Border.ContextFlyout>
                <i:Interaction.Behaviors>
                  <ia:EventTriggerBehavior EventName="PointerEntered" SourceObject="{ReflectionBinding #panel}">
                    <ia:ChangePropertyAction TargetObject="{ReflectionBinding #delete_btn}" PropertyName="IsVisible" Value="True"/>
                  </ia:EventTriggerBehavior>
                  <ia:EventTriggerBehavior EventName="PointerExited" SourceObject="{ReflectionBinding #panel}">
                    <ia:ChangePropertyAction TargetObject="{ReflectionBinding #delete_btn}" PropertyName="IsVisible" Value="False"/>
                  </ia:EventTriggerBehavior>
                </i:Interaction.Behaviors>
                <Grid RowDefinitions="30,165,Auto">
                  <DockPanel VerticalAlignment="Center">
                    <WrapPanel>
                      <TextBlock VerticalAlignment="Center"
                                   Text="{Binding Name,Mode=TwoWay}"
                                   DockPanel.Dock="Left"
                                   Padding="10,5"
                                   FontSize="16"
                                   Foreground="{DynamicResource HighlightForegroundBrushKey}"/>
                      <Button Command="{ReflectionBinding EditNameAsync}"
                              Cursor="Hand"
                              Classes="plain"
                              ToolTip.Tip="{ReflectionBinding Path=Res.LocalAuth_AuthName,Mode=OneWay,Source={x:Static resx:R.Current}}"
                              VerticalAlignment="Center"
                              VerticalContentAlignment="Center">
                        <PathIcon Data="{StaticResource EditDrawing}"
                                Width="10" Height="10"
                                Opacity="0.8"
                                VerticalAlignment="Center" HorizontalAlignment="Left"
                                Margin="0">
                        </PathIcon>
                      </Button>
                    </WrapPanel>

                    <Button DockPanel.Dock="Right" x:Name="delete_btn" Classes="flatbutton" IsVisible="False" Background="Transparent" HorizontalAlignment="Right" Cursor="Hand" ToolTip.Tip="{ReflectionBinding Path=Res.UserChange_DeleteUser,Mode=OneWay,Source={x:Static resx:R.Current}}"
                            Command="{ReflectionBinding #u.DataContext.DeleteAuth}" CommandParameter="{Binding}">
                      <PathIcon Data="{DynamicResource CloseDrawing}" Width="12"></PathIcon>
                    </Button>
                  </DockPanel>

                  <TextBlock Grid.Row="1" Text="------" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="64" IsVisible="{Binding !IsShowCode}" Foreground="{DynamicResource HighlightForegroundBrushKey}"></TextBlock>
                  <TextBlock Grid.Row="1" Text="{Binding CurrentCode}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="54" IsVisible="{Binding IsShowCode}" Foreground="{DynamicResource HighlightForegroundBrushKey}">
                  </TextBlock>


                  <DockPanel Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                    <Panel DockPanel.Dock="Top">
                      <Separator Height="13" IsVisible="{Binding !IsShowCode}"></Separator>
                      <ProgressBar Value="{Binding CodeCountdown,Mode=OneWay}"
                                   Classes="notransitions"
                                   IsVisible="{Binding IsShowCode}"
                                   Margin="0 10 0 4"/>
                      <Separator Classes="Separator" Margin="0 14 0 4"/>
                    </Panel>

                    <!--<controls:ScrollingTextBlock HorizontalAlignment="Center" Width="{Binding #panel.Width}" Text="{Binding}" FontSize="14" Foreground="{DynamicResource HighlightForegroundBrushKey}" ></controls:ScrollingTextBlock>-->

                    <StackPanel Orientation="Horizontal" Spacing="5">
                      <Button Cursor="Hand"
                              Classes="flatbutton"
                              Command="{ReflectionBinding #u.DataContext.ShowAuthCode}"
                              CommandParameter="{Binding}"
                              ToolTip.Tip="{ReflectionBinding Path=Res.LocalAuth_ShowAuthCode,Mode=OneWay,Source={x:Static resx:R.Current}}" >
                        <PathIcon Data="{DynamicResource SearchDrawing}" Width="20"></PathIcon>
                      </Button>

                      <!--<Button Cursor="Hand" 
                            Classes="flatbutton" 
                            Command="{ReflectionBinding #u.DataContext.CopyCodeCilp}" 
                            CommandParameter="{Binding}" 
                            ToolTip.Tip="{ReflectionBinding Path=Res.LocalAuth_Copy,Mode=OneWay,Source={x:Static resx:R.Current}}" >
                      <PathIcon Data="{DynamicResource CopyDrawing}" Width="20"></PathIcon>
                    </Button>-->

                      <Button Cursor="Hand" Classes="flatbutton"
                              Command="{ReflectionBinding #u.DataContext.ShowSteamAuthTrade}"
                              CommandParameter="{Binding}"
                              ToolTip.Tip="{ReflectionBinding Path=Res.LocalAuth_AuthTrade,Mode=OneWay,Source={x:Static resx:R.Current}}" >
                        <PathIcon Data="{DynamicResource TradeDrawing}" Width="20"></PathIcon>
                      </Button>

                      <!--<Button Cursor="Hand" Classes="flatbutton"
                                                    ToolTip.Tip="{ReflectionBinding Path=Res.LocalAuth_CloudSync,Mode=OneWay,Source={x:Static resx:R.Current}}" >
                                                <PathIcon Data="{DynamicResource CloudDrawing}" Width="20"></PathIcon>
                                            </Button>-->

                      <Button Cursor="Hand"
                              Classes="flatbutton"
                              Command="{ReflectionBinding #u.DataContext.ShowSteamAuthData}"
                              CommandParameter="{Binding}"
                              ToolTip.Tip="{ReflectionBinding Path=Res.LocalAuth_ShowAuthInfo,Mode=OneWay,Source={x:Static resx:R.Current}}" >
                        <PathIcon Data="{DynamicResource SlideSearchDrawing}" Width="20"></PathIcon>
                      </Button>

                      <Button Cursor="Hand"
                              Classes="flatbutton"
                              ToolTip.Tip="{ReflectionBinding Path=Res.LocalAuth_ExportAuth_ToQRCode,Mode=OneWay,Source={x:Static resx:R.Current}}" >
                        <Button.Content>
                          <PathIcon Data="{DynamicResource QRCodeDrawing}" Width="20"></PathIcon>
                        </Button.Content>
                        <Button.Flyout>
                          <Flyout>
                            <Image
                                   Width="200"
                                   Height="200"
                                   Source="{Binding QrCodeStream^,Converter={StaticResource BitmapAssetValueConverter},Mode=OneWay}"/>
                          </Flyout>
                        </Button.Flyout>
                      </Button>
                    </StackPanel>

                    <Button Cursor="Hand"
                            Classes="flatbutton"
                            Command="{ReflectionBinding #u.DataContext.CopyCodeCilp}"
                            CommandParameter="{Binding}"
                            HorizontalAlignment="Right"
                            ToolTip.Tip="{ReflectionBinding Path=Res.LocalAuth_Copy,Mode=OneWay,Source={x:Static resx:R.Current}}" >
                      <PathIcon Data="{DynamicResource CopyDrawing}" Width="20"></PathIcon>
                    </Button>
                  </DockPanel>
                </Grid>
              </Border>
            </DataTemplate>
          </ItemsRepeater.ItemTemplate>
        </ItemsRepeater>
      </ScrollViewer>
    </Panel>
  </DockPanel>
</UserControl>
