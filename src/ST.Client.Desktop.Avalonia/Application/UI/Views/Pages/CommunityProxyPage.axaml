<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:System.Application.UI.ViewModels"
             xmlns:resx="using:System.Application.UI.Resx"
             xmlns:service="using:System.Application.Services"
             xmlns:models="using:System.Application.Models"
             xmlns:ms="using:System.Application.Settings"
             xmlns:ui="using:FluentAvalonia.UI.Controls"
             xmlns:controls="using:System.Application.UI.Views.Controls"
             xmlns:pages="using:System.Application.UI.Views.Pages"
             xmlns:sys="using:System"
             xmlns:markup="using:System.Application.Markup"
             x:Name="u"
             x:DataType="vm:CommunityProxyPageViewModel"
             x:CompileBindings="True"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="System.Application.UI.Views.Pages.CommunityProxyPage">
  <Panel>
    <Grid IsVisible="{ReflectionBinding Source={x:Static service:ProxyService.Current},Path=!ProxyStatus,Mode=OneWay}"
          ColumnDefinitions="Auto,*"
          RowDefinitions="Auto,*">
      <Border DockPanel.Dock="Top"
              Grid.Row="0"
              Grid.ColumnSpan="2"
              Margin="10"
              Padding="10"
              Classes="paper"
              Background="{DynamicResource ThemeBrushKey}">
        <ui:CommandBar DefaultLabelPosition="Right"
                       IsSticky="False">
          <ui:CommandBar.PrimaryCommands>
            <!--<ui:CommandBarButton
                              Command="{Binding StartProxyButton_Click}"
                              CommandParameter="True"
                              ToolTip.Tip="{ReflectionBinding Path=Res.CommunityFix_ProxySettings,Mode=OneWay,Source={x:Static resx:R.Current}}"
                              Label="{ReflectionBinding Path=Res.CommunityFix_StartProxy,Mode=OneWay,Source={x:Static resx:R.Current}}">
            </ui:CommandBarButton>-->

            <ui:CommandBarElementContainer>
              <Button Classes="action"
                   Content="{ReflectionBinding Path=Res.CommunityFix_StartProxy,Mode=OneWay,Source={x:Static resx:R.Current}}"
                   FontSize="16"
                   Margin="0 0 10 0"
                   MinWidth="50"
                   Width="200"
                   MinHeight="40"
                   HorizontalContentAlignment="Center"
                   VerticalContentAlignment="Center"
                   Command="{ReflectionBinding StartProxyButton_Click}"
                   CommandParameter="True"/>
            </ui:CommandBarElementContainer>

            <!--<ui:CommandBarSeparator/>-->

            <ui:CommandBarElementContainer>
              <StackPanel Orientation="Horizontal" Spacing="8" Margin="10 0">
                <ToggleSwitch Content=""
                              OnContent="{ReflectionBinding Path=Res.CommunityFix_EnableScriptService,Mode=OneWay,Source={x:Static resx:R.Current}}"
                              OffContent="{ReflectionBinding Path=Res.CommunityFix_EnableScriptService,Mode=OneWay,Source={x:Static resx:R.Current}}"
                              VerticalAlignment="Center"
                              Margin="0 -5 0 0"
                              IsChecked="{Binding Source={x:Static service:ProxyService.Current},Path=IsEnableScript}"/>
                <!--<TextBlock Text="{ReflectionBinding Path=Res.CommunityFix_EnableScriptService,Mode=OneWay,Source={x:Static resx:R.Current}}" VerticalAlignment="Center"/>-->
              </StackPanel>
            </ui:CommandBarElementContainer>

            <ui:CommandBarSeparator/>
            <ui:CommandBarElementContainer Margin="8 0"
                                           HorizontalContentAlignment="Center">
              <StackPanel Orientation="Horizontal">
                <TextBlock Text="{ReflectionBinding Path=Res.CommunityFix_ProxyMode,StringFormat={}{0}ï¼š,Mode=OneWay,Source={x:Static resx:R.Current}}"
                           VerticalAlignment="Center"/>
                <ComboBox VerticalAlignment="Center"
                          Items="{ReflectionBinding Source={x:Static ms:ProxySettings.ProxyModes},Path=., Mode=OneWay}"
                          SelectedItem="{ReflectionBinding Source={x:Static ms:ProxySettings.ProxyMode},Path=Value, Mode=TwoWay}">
                  <!--<ComboBoxItem Content="{ReflectionBinding Path=Res.ProxyMode_Hosts,Mode=OneWay,Source={x:Static resx:R.Current}}"
                              ToolTip.Tip="{ReflectionBinding Path=Res.ProxyMode_HostsTip,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
                <ComboBoxItem Content="{ReflectionBinding Path=Res.ProxyMode_System,Mode=OneWay,Source={x:Static resx:R.Current}}"
                              ToolTip.Tip="{ReflectionBinding Path=Res.ProxyMode_SystemTip,Mode=OneWay,Source={x:Static resx:R.Current}}"/>-->
                  <ComboBox.ItemTemplate>
                    <DataTemplate>
                      <TextBlock Text="{ReflectionBinding Converter={StaticResource EnumDescriptionToNameConverter},ConverterParameter=Localiza}"/>
                    </DataTemplate>
                  </ComboBox.ItemTemplate>
                </ComboBox>
              </StackPanel>
            </ui:CommandBarElementContainer>
            <!--<ui:CommandBarElementContainer Margin="8 0"
                                           HorizontalContentAlignment="Center">
              <RadioButton Content="{ReflectionBinding Path=Res.ProxyMode_Hosts,Mode=OneWay,Source={x:Static resx:R.Current}}" ToolTip.Tip="{ReflectionBinding Path=Res.ProxyMode_HostsTip,Mode=OneWay,Source={x:Static resx:R.Current}}" 
                           IsChecked="{Binding Source={x:Static ms:ProxySettings.EnableWindowsProxy},Path=!Value, Mode=TwoWay}"></RadioButton>
            </ui:CommandBarElementContainer>
            <ui:CommandBarElementContainer Margin="8 0"
                                           HorizontalContentAlignment="Center">
              <RadioButton Content="{ReflectionBinding Path=Res.ProxyMode_System,Mode=OneWay,Source={x:Static resx:R.Current}}" ToolTip.Tip="{ReflectionBinding Path=Res.ProxyMode_SystemTip,Mode=OneWay,Source={x:Static resx:R.Current}}" IsChecked="{Binding Source={x:Static ms:ProxySettings.EnableWindowsProxy},Path=Value, Mode=TwoWay}"></RadioButton>
            </ui:CommandBarElementContainer>-->

            <ui:CommandBarSeparator/>
            <ui:CommandBarButton
                                 Command="{Binding ProxySettingsCommand}"
                                 ToolTip.Tip="{ReflectionBinding Path=Res.CommunityFix_ProxySettings,Mode=OneWay,Source={x:Static resx:R.Current}}"
                                 Label="{ReflectionBinding Path=Res.CommunityFix_ProxySettings,Mode=OneWay,Source={x:Static resx:R.Current}}">
              <ui:CommandBarButton.Icon>
                <ui:PathIcon Data="{StaticResource SettingsDrawing}"/>
              </ui:CommandBarButton.Icon>
            </ui:CommandBarButton>

          </ui:CommandBar.PrimaryCommands>
          <ui:CommandBar.SecondaryCommands>
            <ui:CommandBarToggleButton IsChecked="{Binding Source={x:Static ms:ProxySettings.ProgramStartupRunProxy},Path=Value, Mode=TwoWay}"
                                       Label="{ReflectionBinding Path=Res.CommunityFix_AutoRunProxy,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
            <ui:CommandBarToggleButton IsChecked="{Binding Source={x:Static ms:ProxySettings.OnlyEnableProxyScript},Path=Value, Mode=TwoWay}"
                           Label="{ReflectionBinding Path=Res.CommunityFix_ProxyOnlyOnScript,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
            <ui:CommandBarSeparator/>
            <ui:CommandBarButton Icon="Refresh"
                                 Command="{Binding RefreshCommand}"
                                 Label="{ReflectionBinding Path=Res.Refresh,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
            <ui:CommandBarButton
                     Command="{Binding SetupCertificateCommand}"
                     Label="{ReflectionBinding Path=Res.CommunityFix_SetupCertificate,Mode=OneWay,Source={x:Static resx:R.Current}}">
              <ui:CommandBarButton.Icon>
                <ui:PathIcon Data="{StaticResource CertificateDrawing}"/>
              </ui:CommandBarButton.Icon>
            </ui:CommandBarButton>

            <ui:CommandBarButton IsVisible="{markup:OnPlatform macOS}"
                     Command="{Binding TrustCerCommand}"
                     Label="{ReflectionBinding Path=Res.CommunityFix_CertificateTrust,Mode=OneWay,Source={x:Static resx:R.Current}}">
              <ui:CommandBarButton.Icon>
                <ui:PathIcon Data="{StaticResource CertificateDrawing}"/>
              </ui:CommandBarButton.Icon>
            </ui:CommandBarButton>

            <ui:CommandBarButton
         Command="{Binding DeleteCertificateCommand}"
         Label="{ReflectionBinding Path=Res.CommunityFix_DeleteCertificate,Mode=OneWay,Source={x:Static resx:R.Current}}">
              <ui:CommandBarButton.Icon>
                <ui:PathIcon Data="{StaticResource CertificateDrawing}"/>
              </ui:CommandBarButton.Icon>
            </ui:CommandBarButton>
            <ui:CommandBarButton
         Command="{Binding OpenCertificateDirCommand}"
         Label="{ReflectionBinding Path=Res.CommunityFix_OpenCertificateDir,Mode=OneWay,Source={x:Static resx:R.Current}}">
              <ui:CommandBarButton.Icon>
                <ui:PathIcon Data="{StaticResource FolderOpenDrawing}"/>
              </ui:CommandBarButton.Icon>
            </ui:CommandBarButton>
            <ui:CommandBarSeparator/>

            <ui:CommandBarButton
         Command="{Binding EditHostsFileCommand}"
         Label="{ReflectionBinding Path=Res.CommunityFix_EditHostsFile,Mode=OneWay,Source={x:Static resx:R.Current}}">
              <ui:CommandBarButton.Icon>
                <ui:PathIcon Data="{StaticResource DocumentEditDrawing}"/>
              </ui:CommandBarButton.Icon>
            </ui:CommandBarButton>

            <ui:CommandBarButton
         Command="{Binding ResetHostsFileCommand}"
         Label="{ReflectionBinding Path=Res.CommunityFix_ResetHostsFile,Mode=OneWay,Source={x:Static resx:R.Current}}">
              <ui:CommandBarButton.Icon>
                <ui:PathIcon Data="{StaticResource DocumentEditDrawing}"/>
              </ui:CommandBarButton.Icon>
            </ui:CommandBarButton>

            <ui:CommandBarButton
         Command="{Binding OpenHostsDirCommand}"
         Label="{ReflectionBinding Path=Res.CommunityFix_OpenHostsDir,Mode=OneWay,Source={x:Static resx:R.Current}}">
              <ui:CommandBarButton.Icon>
                <ui:PathIcon Data="{StaticResource FolderOpenDrawing}"/>
              </ui:CommandBarButton.Icon>
            </ui:CommandBarButton>

          </ui:CommandBar.SecondaryCommands>
        </ui:CommandBar>
      </Border>

      <Border Grid.Column="0"
              Grid.Row="1"
              Margin="10 0 10 10"
              Classes="paper"
              Background="{DynamicResource ThemeBrushKey}">
        <ListBox x:Name="items"
                 Classes="metro"
                 Width="320"
                 CornerRadius="{StaticResource PaperRadius}"
                 ClipToBounds="True"
                 Items="{ReflectionBinding Source={x:Static service:ProxyService.Current},Path=ProxyDomainsList,Mode=OneWay}"
                 SelectedItem="{ReflectionBinding Source={x:Static service:ProxyService.Current},Path=SelectGroup,Mode=TwoWay}"
                 VirtualizationMode="None"
                 AutoScrollToSelectedItem="True"
                 Background="Transparent">
          <ListBox.ItemTemplate>
            <DataTemplate DataType="{x:Type models:AccelerateProjectGroupDTO}">
              <StackPanel Orientation="Horizontal"
                         Margin="20 15">
                <CheckBox Classes="onlyCheckBox"
                          IsChecked="{Binding ThreeStateEnable,Mode=TwoWay}"
                          Margin="0 0 20 0">
                </CheckBox>
                <Image Width="30"
                       Source="{Binding ImageStream^,Converter={StaticResource BitmapAssetValueConverter},ConverterParameter=30}">
                </Image>
                <!--<Image Width="40" Source="/Application/UI/Assets/AppResources/Steam.png">
                                    </Image>-->
                <controls:ScrollingTextBlock Text="{Binding Name}"
                                             Classes="h5"
                                             Foreground="{DynamicResource HighlightForegroundBrushKey}"
                                             VerticalAlignment="Center"
                                             Margin="20 0 0 0">
                </controls:ScrollingTextBlock>
              </StackPanel>
            </DataTemplate>
          </ListBox.ItemTemplate>
        </ListBox>
      </Border>

      <DockPanel Grid.Column="1" Grid.Row="1" Classes="paper" Margin="0 0 10 10">

        <controls:AdDialog DockPanel.Dock="Bottom"
                           Margin="0 10 0 0"
                           Standard="Horizontal"
                           Height="160"/>

        <Border Grid.Column="1" Grid.Row="1" Classes="paper" Background="{DynamicResource ThemeBrushKey}">
          <Panel Margin="10 0">
            <DockPanel>
              <DockPanel Margin="0 10 0 0" DockPanel.Dock="Top">
                <CheckBox MinWidth="20"
                          Content="{ReflectionBinding Path=Res.CommunityFix_AllCheck,Mode=OneWay,Source={x:Static resx:R.Current}}"
                          IsChecked="{ReflectionBinding #items.SelectedItem.ThreeStateEnable,Mode=TwoWay}">
                </CheckBox>
                <TextBlock Text="{ReflectionBinding #items.SelectedItem.Name}"
                           FontSize="20"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Right"
                           Foreground="{DynamicResource HighlightForegroundBrushKey}"></TextBlock>
              </DockPanel>
              <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                            VerticalScrollBarVisibility="Auto">
                <TreeView Items="{ReflectionBinding #items.SelectedItem.ObservableItems}"
                          Classes="NameToggle">
                  <TreeView.ItemTemplate>
                    <TreeDataTemplate ItemsSource="{ReflectionBinding Items}"
                                      DataType="{x:Type models:AccelerateProjectDTO}">
                      <!--<StackPanel Spacing="6">-->
                      <CheckBox HorizontalAlignment="Left" IsChecked="{ReflectionBinding Enable}">
                        <TextBlock Text="{ReflectionBinding Name}"></TextBlock>
                      </CheckBox>
                      <!--<ItemsRepeater Items="{ReflectionBinding DomainNamesArray}">
                          <ItemsRepeater.ItemTemplate>
                            <DataTemplate>
                              <TextBlock Text="{ReflectionBinding}"/>
                            </DataTemplate>
                          </ItemsRepeater.ItemTemplate>
                        </ItemsRepeater>-->
                      <!--</StackPanel>-->
                    </TreeDataTemplate>
                  </TreeView.ItemTemplate>
                </TreeView>
                <!--<ItemsControl Items="{ReflectionBinding #items.SelectedItem.ObservableItems}">
                  <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type models:AccelerateProjectDTO}">
                      <StackPanel>
                        <DockPanel>
                          <CheckBox HorizontalAlignment="Left" IsChecked="{Binding Enable}">
                            <TextBlock Text="{Binding Name}"></TextBlock>
                          </CheckBox>
                          <TextBlock Text="{Binding DomainNamesArray[0]}"
                                     HorizontalAlignment="Right"
                                     VerticalAlignment="Center"
                                     Foreground="{DynamicResource HighlightForegroundBrushKey}"></TextBlock>
                        </DockPanel>
                        <Separator Classes="Separator"  />
                      </StackPanel>
                    </DataTemplate>
                  </ItemsControl.ItemTemplate>
                </ItemsControl>-->
              </ScrollViewer>
            </DockPanel>
          </Panel>
        </Border>
      </DockPanel>
    </Grid>

    <Grid RowDefinitions="Auto,*,Auto"
          HorizontalAlignment="Stretch"
          IsVisible="{Binding Source={x:Static service:ProxyService.Current},Path=ProxyStatus,Mode=OneWay}">
      <StackPanel Grid.Row="0" HorizontalAlignment="Center" Margin="0 20 0 0" Spacing="10">
        <StackPanel.Styles>
          <Style Selector="TextBlock">
            <Setter Property="VerticalAlignment" Value="Center"/>
          </Style>
        </StackPanel.Styles>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
          <TextBlock Text="{ReflectionBinding Path=Res.CommunityFix_AlreadyProxy,Mode=OneWay,Source={x:Static resx:R.Current}}"
                     FontSize="26"/>
          <TextBlock FontSize="26"
                     Margin="5 0 0 0"
                     Text="{Binding AccelerateTime,Source={x:Static service:ProxyService.Current},StringFormat= {}{0:hh\\:mm\\:ss}}"/>
        </StackPanel>
        <StackPanel Orientation="Horizontal" Spacing="10" HorizontalAlignment="Center">
          <WrapPanel HorizontalAlignment="Center">
            <TextBlock Text="{ReflectionBinding Path=Res.CommunityFix_ProxyMode,StringFormat={}{0}ï¼š,Mode=OneWay,Source={x:Static resx:R.Current}}"/>

            <TextBlock
              Text="{ReflectionBinding Source={x:Static ms:ProxySettings.ProxyMode},Path=Value, Mode=OneWay,Converter={StaticResource EnumDescriptionToNameConverter},ConverterParameter=Localiza}"/>
          </WrapPanel>
          <WrapPanel HorizontalAlignment="Center">
            <TextBlock Text="{ReflectionBinding Path=Res.CommunityFix_EnableScriptService,StringFormat={}{0}ï¼š,Mode=OneWay,Source={x:Static resx:R.Current}}"/>

            <TextBlock
              Text="{Binding Source={x:Static service:ProxyService.Current},Path=IsEnableScript}"/>
          </WrapPanel>
        </StackPanel>
      </StackPanel>

      <DockPanel Grid.Row="1"
                 Margin="50 10">
        <controls:AdDialog DockPanel.Dock="Right"
                           Margin="10 0 0 0"
                           Standard="Vertical"
                           Width="164"/>

        <TabControl TabStripPlacement="Top"
                Classes="flat"
                HorizontalAlignment="Stretch">
          <TabItem Header="{ReflectionBinding Path=Res.CommunityFix_FlowStatistics,Mode=OneWay,Source={x:Static resx:R.Current}}">
            <!--<pages:ProxyChartView Margin="5 0"/>-->
          </TabItem>
          <TabItem Header="{ReflectionBinding Path=Res.CommunityFix_Services,Mode=OneWay,Source={x:Static resx:R.Current}}">
            <Grid ColumnDefinitions="*,20,*">
              <Border Classes="paper"
                      Background="{DynamicResource ThemeBrushKey}"
                      Grid.Column="0"
                      Padding="10">
                <DockPanel>
                  <TextBlock Text="{ReflectionBinding Path=Res.CommunityFix_AccelerationsEnable,Mode=OneWay,Source={x:Static resx:R.Current}}"
                             FontSize="16"
                             Margin="0 0 0 10"
                             DockPanel.Dock="Top"/>
                  <ScrollViewer>
                    <ItemsControl Items="{ReflectionBinding EnableProxyDomains,Source={x:Static service:ProxyService.Current}}">
                      <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type models:AccelerateProjectDTO}">
                          <StackPanel Margin="10">
                            <DockPanel>
                              <TextBlock Text="{Binding Name}"></TextBlock>
                            </DockPanel>
                            <Separator Classes="Separator"  />
                          </StackPanel>
                        </DataTemplate>
                      </ItemsControl.ItemTemplate>
                    </ItemsControl>
                  </ScrollViewer>
                </DockPanel>
              </Border>

              <Border Classes="paper"
                      Background="{DynamicResource ThemeBrushKey}"
                      Grid.Column="2"
                      Padding="10">
                <DockPanel>
                  <TextBlock Text="{ReflectionBinding Path=Res.CommunityFix_ScriptsEnable,Mode=OneWay,Source={x:Static resx:R.Current}}"
                             FontSize="16"
                             Margin="0 0 0 10"
                             DockPanel.Dock="Top"></TextBlock>
                  <ScrollViewer>
                    <ItemsControl Items="{ReflectionBinding EnableProxyScripts^,Source={x:Static service:ProxyService.Current}}">
                      <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type models:ScriptDTO}">
                          <StackPanel Margin="10">
                            <DockPanel>
                              <TextBlock Text="{Binding Name}"></TextBlock>
                            </DockPanel>
                            <Separator Classes="Separator"/>
                          </StackPanel>
                        </DataTemplate>
                      </ItemsControl.ItemTemplate>
                    </ItemsControl>
                  </ScrollViewer>
                </DockPanel>
              </Border>
            </Grid>
          </TabItem>
          <!--<TabItem Header="åŠ é€Ÿæ—¥å¿—">

            </TabItem>-->
          <!--<TabItem Header="AD">
            <controls:AdDialog />
          </TabItem>-->
        </TabControl>
      </DockPanel>

      <StackPanel Grid.Row="2">
        <Button Classes="action"
                Content="{ReflectionBinding Path=Res.CommunityFix_StopProxy,Mode=OneWay,Source={x:Static resx:R.Current}}"
                HorizontalAlignment="Stretch"
                HorizontalContentAlignment="Center"
                MinHeight="40"
                Width="250"
                Margin="0 20"
                VerticalContentAlignment="Center"
                FontSize="16"
                Command="{ReflectionBinding StartProxyButton_Click}"
                CommandParameter="False"/>
      </StackPanel>
    </Grid>
  </Panel>
</UserControl>
