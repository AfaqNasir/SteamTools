<UserControl
    x:Class="System.Application.UI.Views.Pages.SteamAccountPage"
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:System.Application.UI.Views.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:gif="using:AvaloniaGif"
    xmlns:i="using:Avalonia.Xaml.Interactivity"
    xmlns:ia="using:Avalonia.Xaml.Interactions.Core"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:resx="using:System.Application.UI.Resx"
    xmlns:ui="using:FluentAvalonia.UI.Controls"
    xmlns:vm="using:System.Application.UI.ViewModels"
    x:Name="u"
    d:DesignHeight="450"
    d:DesignWidth="800"
    x:CompileBindings="True"
    x:DataType="vm:SteamAccountPageViewModel"
    mc:Ignorable="d">
  <DockPanel>
    <Border
        Margin="{StaticResource ScrollMargin}"
        Padding="10"
        Background="{DynamicResource ThemeBrushKey}"
        Classes="paper"
        DockPanel.Dock="Top">
      <ui:CommandBar DefaultLabelPosition="Right" IsSticky="False">
        <ui:CommandBar.PrimaryCommands>
          <ui:CommandBarButton
              Command="{Binding LoginAccountCommand}"
              Icon="Add"
              Label="{ReflectionBinding Path=Res.UserChange_LoginNewAccount,
                                                  Mode=OneWay,
                                                  Source={x:Static resx:R.Current}}" />
          <ui:CommandBarButton
              Command="{Binding RefreshCommand}"
              Icon="Refresh"
              Label="{ReflectionBinding Path=Res.Refresh,
                                                  Mode=OneWay,
                                                  Source={x:Static resx:R.Current}}" />
          <ui:CommandBarSeparator />
          <ui:CommandBarButton Command="{Binding ShareManageCommand}" Label="{ReflectionBinding Path=Res.AccountChange_Title, Mode=OneWay, Source={x:Static resx:R.Current}}">
            <ui:CommandBarButton.Icon>
              <ui:FAPathIcon Data="{StaticResource ChannelShareDrawing}" />
            </ui:CommandBarButton.Icon>
          </ui:CommandBarButton>

          <ui:CommandBarToggleButton x:Name="ShowDetail" Label="{ReflectionBinding Path=Res.UserChange_ShowHideUserName, Mode=OneWay, Source={x:Static resx:R.Current}}">
            <ui:CommandBarToggleButton.Icon>
              <ui:FontIcon Glyph="&#xE18B;" FontFamily="{StaticResource SymbolThemeFontFamily}"/>
            </ui:CommandBarToggleButton.Icon>
          </ui:CommandBarToggleButton>

        </ui:CommandBar.PrimaryCommands>
        <ui:CommandBar.SecondaryCommands>
          <ui:CommandBarButton Icon="Help"
                               Command="{Binding OpenBrowserCommand}"
                               CommandParameter="https://steampp.net/faq#ChangeAccount"
                               Label="{ReflectionBinding Path=Res.Helper,Mode=OneWay,Source={x:Static resx:R.Current}}"/>
        </ui:CommandBar.SecondaryCommands>
      </ui:CommandBar>
    </Border>

    <Panel HorizontalAlignment="Stretch" DockPanel.Dock="Bottom">
      <TextBlock
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          IsVisible="{Binding IsUserEmpty}"
          Text="{ReflectionBinding Path=Res.UserChange_NoUserTip,
                                         Mode=OneWay,
                                         Source={x:Static resx:R.Current}}"
          TextWrapping="WrapWithOverflow" />
      <ScrollViewer
          Padding="0,0,0,10"
          HorizontalScrollBarVisibility="Disabled"
          VerticalScrollBarVisibility="Auto">
        <ItemsRepeater Items="{Binding SteamUsers}">
          <ItemsRepeater.Layout>
            <!--<UniformGridLayout ItemsJustification="SpaceEvenly" MinRowSpacing="20" Orientation="Horizontal"
                                       MaximumRowsOrColumns="6" />-->
            <StackLayout Orientation="Vertical" Spacing="10" />
          </ItemsRepeater.Layout>
          <ItemsRepeater.ItemTemplate>
            <DataTemplate>
              <Border
                  x:Name="card"
                  Margin="10,0"
                  Background="{DynamicResource ThemeBrushKey}"
                  Classes="paper">
                <!--<Border.Background>
                <SolidColorBrush Color="{DynamicResource ThemeColorKey}"
                                 Opacity="{ReflectionBinding Value,Source={x:Static ms:UISettings.AcrylicOpacity},Mode=OneWay}"/>
              </Border.Background>-->
                <Border.ContextFlyout>
                  <MenuFlyout>
                    <MenuItem
                        Command="{ReflectionBinding #u.DataContext.SteamId_Click}"
                        CommandParameter="{Binding}"
                        Header="{ReflectionBinding Path=Res.UserChange_BtnText,
                                                                       Mode=OneWay,
                                                                       Source={x:Static resx:R.Current}}" />
                    <MenuItem
                        Command="{ReflectionBinding #u.DataContext.OfflineModeButton_Click}"
                        CommandParameter="{Binding}"
                        Header="{ReflectionBinding Path=Res.UserChange_OfflineBtn,
                                                                       Mode=OneWay,
                                                                       Source={x:Static resx:R.Current}}" />
                    <MenuItem Header="-"/>
                    <!--<MenuItem Header="{ReflectionBinding Path=Res.Copy,
                                                         Mode=OneWay,
                                                         Source={x:Static resx:R.Current}}">
                      <MenuItem Header="SteamID32"></MenuItem>
                      <MenuItem Header="SteamID64"></MenuItem>
                      <MenuItem Header="AccountName"></MenuItem>
                    </MenuItem>-->
                    <MenuItem
                        Command="{ReflectionBinding #u.DataContext.OpenUserDataFolder}"
                        CommandParameter="{Binding}"
                        Header="{ReflectionBinding Path=Res.UserChange_ShowUserDataFolder,
                                                                       Mode=OneWay,
                                                                       Source={x:Static resx:R.Current}}" />
                    <MenuItem Header="-"/>
                    <MenuItem
                        Command="{ReflectionBinding #u.DataContext.DeleteUserButton_Click}"
                        CommandParameter="{Binding}"
                        Header="{ReflectionBinding Path=Res.UserChange_DeleteUser,
                                                                       Mode=OneWay,
                                                                       Source={x:Static resx:R.Current}}" />
                  </MenuFlyout>
                </Border.ContextFlyout>
                <i:Interaction.Behaviors>
                  <ia:EventTriggerBehavior EventName="PointerEntered" SourceObject="{ReflectionBinding #card}">
                    <ia:ChangePropertyAction
                        PropertyName="IsVisible"
                        TargetObject="{ReflectionBinding #delete_btn}"
                        Value="True" />
                  </ia:EventTriggerBehavior>
                  <ia:EventTriggerBehavior EventName="PointerExited" SourceObject="{ReflectionBinding #card}">
                    <ia:ChangePropertyAction
                        PropertyName="IsVisible"
                        TargetObject="{ReflectionBinding #delete_btn}"
                        Value="False" />
                  </ia:EventTriggerBehavior>
                </i:Interaction.Behaviors>

                <Grid Height="150" ColumnDefinitions="Auto,*">
                  <Border ClipToBounds="True" CornerRadius="{StaticResource PaperRadiusLeft}">
                    <Panel
                        x:Name="avatar"
                        Cursor="Hand"
                        ToolTip.Tip="{ReflectionBinding Path=Res.UserChange_OpenUserUrl,
                                                                            Mode=OneWay,
                                                                            Source={x:Static resx:R.Current}}">
                      <!--  OpenUserProfileUrl  -->
                      <i:Interaction.Behaviors>
                        <ia:EventTriggerBehavior EventName="Tapped" SourceObject="{ReflectionBinding #avatar}">
                          <ia:InvokeCommandAction Command="{ReflectionBinding #u.DataContext.OpenUserProfileUrl}" CommandParameter="{Binding}" />
                        </ia:EventTriggerBehavior>
                      </i:Interaction.Behaviors>
                      <!--<Image Width="184"
                          Source="avares://System.Application.SteamTools.Client.Avalonia/Application/UI/Assets/AppResources/avatar.jpg"
                          Stretch="Uniform"/>-->
                      <gif:Image2
                          Width="150"
                          DecodeWidth="150"
                          AutoStart="true"
                          Source="{Binding AvatarStream^}"
                          FallbackSource="avares://System.Application.SteamTools.Client.Avalonia/Application/UI/Assets/AppResources/avatar.jpg"
                          Stretch="Uniform" />
                      <!--<gif:Image2
                          Width="184"
                          Height="184"
                          AutoStart="true"
                          IsVisible="{Binding MiniProfile.AvatarFrameStream^, Converter={StaticResource IsNullConverter}, ConverterParameter=invert}"
                          Source="{Binding MiniProfile.AvatarFrameStream^}"
                          Stretch="Uniform" />-->
                    </Panel>
                  </Border>
                  <Panel Grid.Column="1" Margin="10,0,0,0">
                    <StackPanel Margin="0,5,0,0">
                      <StackPanel VerticalAlignment="Center"
                                  Orientation="Horizontal"
                                  Spacing="8">
                        <Ellipse
                            x:Name="circle"
                            Width="10"
                            Height="10"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Fill="#adadad"
                            StrokeThickness="0"
                            ToolTip.Tip="{Binding OnlineState}">
                          <i:Interaction.Behaviors>
                            <ia:DataTriggerBehavior
                                Binding="{Binding OnlineState}"
                                ComparisonCondition="Equal"
                                Value="online">
                              <ia:ChangePropertyAction
                                  PropertyName="Fill"
                                  TargetObject="{ReflectionBinding #circle}"
                                  Value="#6AC3E7" />
                            </ia:DataTriggerBehavior>
                            <ia:DataTriggerBehavior
                                Binding="{Binding OnlineState}"
                                ComparisonCondition="Equal"
                                Value="in-game">
                              <ia:ChangePropertyAction
                                  PropertyName="Fill"
                                  TargetObject="{ReflectionBinding #circle}"
                                  Value="#90BA3C" />
                            </ia:DataTriggerBehavior>
                            <ia:DataTriggerBehavior
                                Binding="{Binding OnlineState}"
                                ComparisonCondition="Equal"
                                Value="offline">
                              <ia:ChangePropertyAction
                                  PropertyName="Fill"
                                  TargetObject="{ReflectionBinding #circle}"
                                  Value="#adadad" />
                            </ia:DataTriggerBehavior>
                          </i:Interaction.Behaviors>
                        </Ellipse>
                        <controls:ScrollingTextBlock
                            x:Name="nickname"
                            Cursor="Hand"
                            Classes="h4 semibold"
                            Foreground="{DynamicResource HighlightForegroundBrushKey}"
                            Text="{Binding SteamNickName}"
                            ToolTip.Tip="{ReflectionBinding Path=Res.UserChange_BtnTootlip,
                                                                                    Mode=OneWay,
                                                                                    Source={x:Static resx:R.Current}}">
                          <i:Interaction.Behaviors>
                            <ia:EventTriggerBehavior EventName="Tapped" SourceObject="{ReflectionBinding #nickname}">
                              <ia:InvokeCommandAction Command="{ReflectionBinding #u.DataContext.SteamId_Click}" CommandParameter="{Binding}" />
                            </ia:EventTriggerBehavior>
                          </i:Interaction.Behaviors>
                        </controls:ScrollingTextBlock>
                        <TextBlock
                            VerticalAlignment="Center"
                            Classes="h6 semibold"
                            Foreground="{DynamicResource HighlightForegroundBrushKey}"
                            IsVisible="{Binding Remark, Mode=OneWay,Converter={StaticResource IsNullConverter},ConverterParameter=invert}"
                            Text="{Binding Remark, Mode=OneWay,StringFormat={}({0})}" />
                        <Button
                            VerticalAlignment="Center"
                            VerticalContentAlignment="Center"
                            Classes="plain"
                            Command="{ReflectionBinding #u.DataContext.EditRemarkAsync}"
                            CommandParameter="{Binding}"
                            Cursor="Hand"
                            ToolTip.Tip="{ReflectionBinding Path=Res.UserChange_EditRemark,
                                                                                    Mode=OneWay,
                                                                                    Source={x:Static resx:R.Current}}">
                          <PathIcon
                              Width="10"
                              Height="10"
                              Margin="0"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              Data="{StaticResource EditDrawing}"
                              Opacity="0.8" />
                        </Button>
                      </StackPanel>

                      <TextBox
                          Padding="0"
                          VerticalAlignment="Center"
                          VerticalContentAlignment="Center"
                          HorizontalAlignment="Left"
                          HorizontalContentAlignment="Left"
                          Classes="readonlybox"
                          PasswordChar="{ReflectionBinding #ShowDetail.IsChecked,Converter={StaticResource IsReadOnlyPasswordBoxConverter},ConverterParameter=invert}"
                          Foreground="{DynamicResource InactiveForegroundBrushKey}"
                          IsReadOnly="True">
                        <TextBox.Text>
                          <MultiBinding StringFormat="{}{0} ({1})">
                            <Binding Path="AccountName"/>
                            <Binding Path="SteamId64"/>
                          </MultiBinding>
                        </TextBox.Text>
                      </TextBox>

                      <Border>
                        <StackPanel Orientation="Horizontal"
                                    Spacing="3"
                                    VerticalAlignment="Center">
                          <StackPanel Spacing="3"
                                      Orientation="Horizontal"
                                      IsVisible="{Binding MiniProfile,Converter={StaticResource IsNullConverter},ConverterParameter=invert}">
                            <controls:Badge Background="#3CB371"
                                      Text="{Binding MiniProfile.Level}"
                                      Content="Level">
                            </controls:Badge>
                            <controls:Badge Background="#007EC6"
                                            IsVisible="{Binding MiniProfile.InGame,Converter={StaticResource IsNullConverter},ConverterParameter=invert}"
                                            Text="{Binding MiniProfile.InGame.Name}"
                                            Content="{ReflectionBinding Path=Res.UserChange_InGame,Mode=OneWay,Source={x:Static resx:R.Current}}">
                            </controls:Badge>
                          </StackPanel>

                          <controls:Badge Background="#512BD4"
                                          IsVisible="{Binding RememberPassword}"
                                      Text="{ReflectionBinding Path=Res.UserChange_RememberMe, Mode=OneWay, Source={x:Static resx:R.Current}}">
                            <controls:Badge.Icon>
                              <ui:SymbolIcon Symbol="Checkmark"/>
                            </controls:Badge.Icon>
                          </controls:Badge>

                          <controls:Badge Background="#FE7D37"
                                          IsVisible="{Binding MostRecent}"
                                      Text="{ReflectionBinding Path=Res.UserChange_RecentLogin, Mode=OneWay, Source={x:Static resx:R.Current}}">
                            <controls:Badge.Icon>
                              <ui:SymbolIcon Symbol="Checkmark"/>
                            </controls:Badge.Icon>
                          </controls:Badge>
                        </StackPanel>
                      </Border>
                    </StackPanel>

                    <DockPanel VerticalAlignment="Bottom">
                      <StackPanel Orientation="Horizontal">
                        <PathIcon
                            Width="14"
                            Margin="5,0"
                            VerticalAlignment="Center"
                            Data="{StaticResource ClockDrawing}"
                            Foreground="{DynamicResource InactiveForegroundBrushKey}" />
                        <TextBlock
                            VerticalAlignment="Center"
                            FontSize="16"
                            Foreground="{DynamicResource InactiveForegroundBrushKey}"
                            Text="{Binding LastLoginTime, StringFormat={}{0:yyyy-MM-dd HH:mm:ss}}" />
                      </StackPanel>

                      <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                        <!--<Border
                            BorderBrush="{DynamicResource SemiactiveBackgroundBrushKey}"
                            BorderThickness=".66,.66,.66,0">-->
                        <Button
                            MaxWidth="200"
                            HorizontalAlignment="Stretch"
                            ToolTip.Tip="{ReflectionBinding Path=Res.UserChange_OfflineBtn,
                                                                                    Mode=OneWay,
                                                                                    Source={x:Static resx:R.Current}}"
                            Classes="flatbutton"
                            Command="{ReflectionBinding #u.DataContext.OfflineModeButton_Click}"
                            CommandParameter="{Binding}"
                            Cursor="Hand">
                          <controls:ScrollingTextBlock Text="{ReflectionBinding Path=Res.UserChange_OfflineBtn, Mode=OneWay, Source={x:Static resx:R.Current}}" />
                        </Button>
                        <!--</Border>-->
                        <!--<Border
                            BorderBrush="{DynamicResource SemiactiveBackgroundBrushKey}"
                            BorderThickness="0,.66,0,0">-->
                        <Button
                            ToolTip.Tip="{ReflectionBinding Path=Res.UserChange_BtnTootlip,
                                                                                    Mode=OneWay,
                                                                                    Source={x:Static resx:R.Current}}"
                            MaxWidth="250"
                            HorizontalAlignment="Stretch"
                            Classes="flatbutton"
                            Command="{ReflectionBinding #u.DataContext.SteamId_Click}"
                            CommandParameter="{Binding}"
                            Cursor="Hand">
                          <controls:ScrollingTextBlock Text="{ReflectionBinding Path=Res.UserChange_BtnText, Mode=OneWay, Source={x:Static resx:R.Current}}" />
                        </Button>
                        <!--</Border>-->
                      </StackPanel>
                    </DockPanel>

                    <Panel>
                      <Button
                          x:Name="delete_btn"
                          HorizontalAlignment="Right"
                          VerticalAlignment="Top"
                          Background="Transparent"
                          Classes="flatbutton"
                          Command="{ReflectionBinding #u.DataContext.DeleteUserButton_Click}"
                          CommandParameter="{Binding}"
                          Cursor="Hand"
                          IsVisible="False"
                          ToolTip.Tip="{ReflectionBinding Path=Res.UserChange_DeleteUser,
                                                                                Mode=OneWay,
                                                                                Source={x:Static resx:R.Current}}">
                        <PathIcon Width="12" Data="{DynamicResource CloseDrawing}" />
                      </Button>
                    </Panel>
                  </Panel>
                </Grid>
              </Border>
            </DataTemplate>
          </ItemsRepeater.ItemTemplate>
        </ItemsRepeater>
      </ScrollViewer>
    </Panel>
  </DockPanel>
</UserControl>
